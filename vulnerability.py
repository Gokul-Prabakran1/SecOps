# Example code with intentional issues for testing SonarCloud

import os  # Unused import (code smell)

def add_numbers(a, b):
    return a + b

def add_numbers(a, b):  # Duplicate function (code duplication)
    return a + b

def authenticate_user(username, password):
    if username == "admin" and password == "password123":  # Hardcoded credentials (bug/security issue)
        print("Access granted")
    else:
        print("Access denied")

def unused_function():  # Unused function (code smell)
    pass

def calculate_area(radius):  # Inefficient implementation (code smell)
    area = 3.14 * radius * radius  # Use `math.pi` instead of 3.14
    return area

class Calculator:  # Code duplication: repetitive logic
    def add(self, a, b):
        return a + b

    def subtract(self, a, b):
        return a - b

    def add_numbers(self, a, b):  # Duplicate logic (code duplication)
        return a + b

def read_file(filepath):  # Error-prone code (bug)
    file = open(filepath, "r")  # File not closed (resource leak)
    data = file.read()
    return data

# Global variable misuse (code smell)
counter = 0

def increment_counter():
    global counter
    counter += 1
    return counter

# Function with too many arguments (code smell)
def complex_function(arg1, arg2, arg3, arg4, arg5, arg6):
    return arg1 + arg2 + arg3 + arg4 + arg5 + arg6
