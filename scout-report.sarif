{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Docker Scout",
          "informationUri": "https://docker.com/products/docker-scout",
          "name": "docker scout",
          "rules": [
            {
              "id": "CVE-2021-3807",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-3807: Inefficient Regular Expression Complexity"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2021-3807?s=github&n=ansi-regex&t=npm&vr=%3E%3D3.0.0%2C%3C3.0.1",
              "help": {
                "text": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service when parsing invalid ANSI escape codes.\n\n**Proof of Concept**\n```js\nimport ansiRegex from 'ansi-regex';\nfor(var i = 1; i <= 50000; i++) {\n    var time = Date.now();\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\n    ansiRegex().test(attack_str)\n    var time_cost = Date.now() - time;\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\n}\n```\nThe ReDOS is mainly due to the sub-patterns `[[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`\n",
                "markdown": "> ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service when parsing invalid ANSI escape codes.\n\n**Proof of Concept**\n```js\nimport ansiRegex from 'ansi-regex';\nfor(var i = 1; i <= 50000; i++) {\n    var time = Date.now();\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\n    ansiRegex().test(attack_str)\n    var time_cost = Date.now() - time;\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\n}\n```\nThe ReDOS is mainly due to the sub-patterns `[[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/ansi-regex@3.0.0                     |\n| Affected range | >=3.0.0,<3.0.1                               |\n| Fixed version  | 3.0.1                                        |\n| CVSS Score     |                                          7.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H |\n"
              },
              "properties": {
                "affected_version": ">=4.0.0,<4.1.1",
                "cvssV3": 7.5,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "fixed_version": "4.1.1",
                "purls": [
                  "pkg:npm/ansi-regex@3.0.0",
                  "pkg:npm/ansi-regex@4.1.0"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-24999",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-24999: Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-24999?s=github&n=qs&t=npm&vr=%3E%3D6.5.0%2C%3C6.5.3",
              "help": {
                "text": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.\n",
                "markdown": "> qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/qs@6.5.2                             |\n| Affected range | >=6.5.0,<6.5.3                               |\n| Fixed version  | 6.5.3                                        |\n| CVSS Score     |                                          7.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H |\n"
              },
              "properties": {
                "affected_version": ">=6.5.0,<6.5.3",
                "cvssV3": 7.5,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "fixed_version": "6.5.3",
                "purls": [
                  "pkg:npm/qs@6.5.2"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-25881",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-25881: Inefficient Regular Expression Complexity"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-25881?s=github&n=http-cache-semantics&t=npm&vr=%3C4.1.1",
              "help": {
                "text": "http-cache semantics contains an Inefficient Regular Expression Complexity , leading to Denial of Service. This affects versions of the package http-cache-semantics before 4.1.1. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.\n",
                "markdown": "> http-cache semantics contains an Inefficient Regular Expression Complexity , leading to Denial of Service. This affects versions of the package http-cache-semantics before 4.1.1. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/http-cache-semantics@3.8.1           |\n| Affected range | <4.1.1                                       |\n| Fixed version  | 4.1.1                                        |\n| CVSS Score     |                                          7.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H |\n"
              },
              "properties": {
                "affected_version": "<4.1.1",
                "cvssV3": 7.5,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "fixed_version": "4.1.1",
                "purls": [
                  "pkg:npm/http-cache-semantics@3.8.1"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-25883",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-25883: Inefficient Regular Expression Complexity"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-25883?s=github&n=semver&t=npm&vr=%3C5.7.2",
              "help": {
                "text": "Versions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.\n",
                "markdown": "> Versions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/semver@5.7.1                         |\n| Affected range | <5.7.2                                       |\n| Fixed version  | 5.7.2                                        |\n| CVSS Score     |                                          7.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H |\n"
              },
              "properties": {
                "affected_version": "<5.7.2",
                "cvssV3": 7.5,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "fixed_version": "5.7.2",
                "purls": [
                  "pkg:npm/semver@5.7.1"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-3517",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-3517: Inefficient Regular Expression Complexity"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-3517?s=github&n=minimatch&t=npm&vr=%3C3.0.5",
              "help": {
                "text": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.\n",
                "markdown": "> A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/minimatch@3.0.4                      |\n| Affected range | <3.0.5                                       |\n| Fixed version  | 3.0.5                                        |\n| CVSS Score     |                                          7.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H |\n"
              },
              "properties": {
                "affected_version": "<3.0.5",
                "cvssV3": 7.5,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "fixed_version": "3.0.5",
                "purls": [
                  "pkg:npm/minimatch@3.0.4"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-38900",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2022-38900: Improper Input Validation"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2022-38900?s=github&n=decode-uri-component&t=npm&vr=%3C0.2.1",
              "help": {
                "text": "decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.\n",
                "markdown": "> decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/decode-uri-component@0.2.0           |\n| Affected range | <0.2.1                                       |\n| Fixed version  | 0.2.1                                        |\n| CVSS Score     |                                          7.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H |\n"
              },
              "properties": {
                "affected_version": "<0.2.1",
                "cvssV3": 7.5,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "fixed_version": "0.2.1",
                "purls": [
                  "pkg:npm/decode-uri-component@0.2.0"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-21538",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-21538: Inefficient Regular Expression Complexity"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-21538?s=github&n=cross-spawn&t=npm&vr=%3C6.0.6",
              "help": {
                "text": "Versions of the package cross-spawn before 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.\n",
                "markdown": "> Versions of the package cross-spawn before 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/cross-spawn@5.1.0                    |\n| Affected range | <6.0.6                                       |\n| Fixed version  | 7.0.5                                        |\n| CVSS Score     |                                          7.5 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H |\n"
              },
              "properties": {
                "affected_version": "<6.0.6",
                "cvssV3": 7.5,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "fixed_version": "7.0.5",
                "purls": [
                  "pkg:npm/cross-spawn@5.1.0"
                ],
                "security-severity": "7.5",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-4435",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-4435: Untrusted Search Path"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2021-4435?s=github&n=yarn&t=npm&vr=%3C1.22.13",
              "help": {
                "text": "An untrusted search path vulnerability was found in Yarn. When a victim runs certain Yarn commands in a directory with attacker-controlled content, malicious commands could be executed in unexpected ways.\n",
                "markdown": "> An untrusted search path vulnerability was found in Yarn. When a victim runs certain Yarn commands in a directory with attacker-controlled content, malicious commands could be executed in unexpected ways.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/yarn@1.22.5                          |\n| Affected range | <1.22.13                                     |\n| Fixed version  | 1.22.13                                      |\n| CVSS Score     |                                          7.7 |\n| CVSS Vector    | CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H |\n"
              },
              "properties": {
                "affected_version": "<1.22.13",
                "cvssV3": 7.7,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H",
                "fixed_version": "1.22.13",
                "purls": [
                  "pkg:npm/yarn@1.22.5"
                ],
                "security-severity": "7.7",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-29415",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2024-29415: Server-Side Request Forgery (SSRF)"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2024-29415?s=github&n=ip&t=npm&vr=%3C%3D2.0.1",
              "help": {
                "text": "The ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282.\n",
                "markdown": "> The ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/ip@1.1.5                             |\n| Affected range | <=2.0.1                                      |\n| Fixed version  | not fixed                                    |\n| CVSS Score     |                                          8.1 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H |\n"
              },
              "properties": {
                "affected_version": "<=2.0.1",
                "cvssV3": 8.1,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "fixed_version": "not fixed",
                "purls": [
                  "pkg:npm/ip@1.1.5"
                ],
                "security-severity": "8.1",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-32803",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-32803: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2021-32803?s=github&n=tar&t=npm&vr=%3E%3D4.0.0%2C%3C4.4.15",
              "help": {
                "text": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThis issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.\n\n### Patches\n\n3.2.3 || 4.4.15 || 5.0.7 || 6.1.2\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `filter` method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.\n",
                "markdown": "> ### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThis issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.\n\n### Patches\n\n3.2.3 || 4.4.15 || 5.0.7 || 6.1.2\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `filter` method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/tar@4.4.13                           |\n| Affected range | >=4.0.0,<4.4.15                              |\n| Fixed version  | 4.4.15                                       |\n| CVSS Score     |                                          8.2 |\n| CVSS Vector    | CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N |\n"
              },
              "properties": {
                "affected_version": ">=4.0.0,<4.4.15",
                "cvssV3": 8.2,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
                "fixed_version": "4.4.15",
                "purls": [
                  "pkg:npm/tar@4.4.13"
                ],
                "security-severity": "8.2",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-32804",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-32804: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2021-32804?s=github&n=tar&t=npm&vr=%3E%3D4.0.0%2C%3C4.4.14",
              "help": {
                "text": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. \n\nThis logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. \n\n### Patches\n\n3.2.2 || 4.4.14 || 5.0.6 || 6.1.1\n\nNOTE: an adjacent issue [CVE-2021-32803](https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw) affects this release level. Please ensure you update to the latest patch levels that address CVE-2021-32803 as well if this adjacent issue affects your `node-tar` use case.\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths.\n\n```js\nconst path = require('path')\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  // either add this function...\n  onentry: (entry) => {\n    if (path.isAbsolute(entry.path)) {\n      entry.path = sanitizeAbsolutePathSomehow(entry.path)\n      entry.absolute = path.resolve(entry.path)\n    }\n  },\n\n  // or this one\n  filter: (file, entry) => {\n    if (path.isAbsolute(entry.path)) {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.\n",
                "markdown": "> ### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. \n\nThis logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. \n\n### Patches\n\n3.2.2 || 4.4.14 || 5.0.6 || 6.1.1\n\nNOTE: an adjacent issue [CVE-2021-32803](https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw) affects this release level. Please ensure you update to the latest patch levels that address CVE-2021-32803 as well if this adjacent issue affects your `node-tar` use case.\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths.\n\n```js\nconst path = require('path')\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  // either add this function...\n  onentry: (entry) => {\n    if (path.isAbsolute(entry.path)) {\n      entry.path = sanitizeAbsolutePathSomehow(entry.path)\n      entry.absolute = path.resolve(entry.path)\n    }\n  },\n\n  // or this one\n  filter: (file, entry) => {\n    if (path.isAbsolute(entry.path)) {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/tar@4.4.13                           |\n| Affected range | >=4.0.0,<4.4.14                              |\n| Fixed version  | 4.4.14                                       |\n| CVSS Score     |                                          8.2 |\n| CVSS Vector    | CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N |\n"
              },
              "properties": {
                "affected_version": ">=4.0.0,<4.4.14",
                "cvssV3": 8.2,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
                "fixed_version": "4.4.14",
                "purls": [
                  "pkg:npm/tar@4.4.13"
                ],
                "security-severity": "8.2",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-37701",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-37701: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2021-37701?s=github&n=tar&t=npm&vr=%3E%3D3.0.0%2C%3C4.4.16",
              "help": {
                "text": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nAdditionally, a similar confusion could arise on case-insensitive filesystems.  If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit.  A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. \n\nThese issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n4.4.16 || 5.0.8 || 6.1.7\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n### Fix\n\nThe problem is addressed in the following ways:\n\n1. All paths are normalized to use `/` as a path separator, replacing `\\` with `/` on Windows systems, and leaving `\\` intact in the path on posix systems.  This is performed in depth, at every level of the program where paths are consumed.\n2. Directory cache pruning is performed case-insensitively.  This _may_ result in undue cache misses on case-sensitive file systems, but the performance impact is negligible.\n\n#### Caveat\n\nNote that this means that the `entry` objects exposed in various parts of tar's API will now always use `/` as a path separator, even on Windows systems.  This is not expected to cause problems, as `/` is a valid path separator on Windows systems, but _may_ result in issues if `entry.path` is compared against a path string coming from some other API such as `fs.realpath()` or `path.resolve()`.\n\nUsers are encouraged to always normalize paths using a well-tested method such as `path.resolve()` before comparing paths to one another.\n",
                "markdown": "> ### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nAdditionally, a similar confusion could arise on case-insensitive filesystems.  If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit.  A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. \n\nThese issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n4.4.16 || 5.0.8 || 6.1.7\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n### Fix\n\nThe problem is addressed in the following ways:\n\n1. All paths are normalized to use `/` as a path separator, replacing `\\` with `/` on Windows systems, and leaving `\\` intact in the path on posix systems.  This is performed in depth, at every level of the program where paths are consumed.\n2. Directory cache pruning is performed case-insensitively.  This _may_ result in undue cache misses on case-sensitive file systems, but the performance impact is negligible.\n\n#### Caveat\n\nNote that this means that the `entry` objects exposed in various parts of tar's API will now always use `/` as a path separator, even on Windows systems.  This is not expected to cause problems, as `/` is a valid path separator on Windows systems, but _may_ result in issues if `entry.path` is compared against a path string coming from some other API such as `fs.realpath()` or `path.resolve()`.\n\nUsers are encouraged to always normalize paths using a well-tested method such as `path.resolve()` before comparing paths to one another.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/tar@4.4.13                           |\n| Affected range | >=3.0.0,<4.4.16                              |\n| Fixed version  | 4.4.16                                       |\n| CVSS Score     |                                          8.2 |\n| CVSS Vector    | CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N |\n"
              },
              "properties": {
                "affected_version": ">=3.0.0,<4.4.16",
                "cvssV3": 8.2,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
                "fixed_version": "4.4.16",
                "purls": [
                  "pkg:npm/tar@4.4.13"
                ],
                "security-severity": "8.2",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-37712",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-37712: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2021-37712?s=github&n=tar&t=npm&vr=%3E%3D3.0.0%2C%3C4.4.18",
              "help": {
                "text": "### Impact\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. It led to bypassing node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n6.1.9 || 5.0.10 || 4.4.18\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n#### Fix\n\nThe problem is addressed in the following ways, when comparing paths in the directory cache and path reservation systems:\n\n1. The `String.normalize('NFKD')` method is used to first normalize all unicode to its maximally compatible and multi-code-point form.\n2. All slashes are normalized to `/` on Windows systems (on posix systems, `\\` is a valid filename character, and thus left intact).\n3. When a symbolic link is encountered on Windows systems, the entire directory cache is cleared.  Collisions related to use of 8.3 short names to replace directories with other (non-symlink) types of entries may make archives fail to extract properly, but will not result in arbitrary file writes.\n\n",
                "markdown": "> ### Impact\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. It led to bypassing node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n6.1.9 || 5.0.10 || 4.4.18\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n#### Fix\n\nThe problem is addressed in the following ways, when comparing paths in the directory cache and path reservation systems:\n\n1. The `String.normalize('NFKD')` method is used to first normalize all unicode to its maximally compatible and multi-code-point form.\n2. All slashes are normalized to `/` on Windows systems (on posix systems, `\\` is a valid filename character, and thus left intact).\n3. When a symbolic link is encountered on Windows systems, the entire directory cache is cleared.  Collisions related to use of 8.3 short names to replace directories with other (non-symlink) types of entries may make archives fail to extract properly, but will not result in arbitrary file writes.\n\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/tar@4.4.13                           |\n| Affected range | >=3.0.0,<4.4.18                              |\n| Fixed version  | 4.4.18                                       |\n| CVSS Score     |                                          8.2 |\n| CVSS Vector    | CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N |\n"
              },
              "properties": {
                "affected_version": ">=3.0.0,<4.4.18",
                "cvssV3": 8.2,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
                "fixed_version": "4.4.18",
                "purls": [
                  "pkg:npm/tar@4.4.13"
                ],
                "security-severity": "8.2",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-37713",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-37713: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2021-37713?s=github&n=tar&t=npm&vr=%3C4.4.18",
              "help": {
                "text": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\n\nThis logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`.  If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory.\n\nAdditionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path.\n\nThis only affects users of `node-tar` on Windows systems.\n\n### Patches\n\n4.4.18 || 5.0.10 || 6.1.9\n\n### Workarounds\n\nThere is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does.\n\nUsers are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.\n\n### Fix\n\nThe fixed versions strip path roots from all paths prior to being resolved against the extraction target folder, even if such paths are not \"absolute\".\n\nAdditionally, a path starting with a drive letter and then two dots, like `c:../`, would bypass the check for `..` path portions.  This is checked properly in the patched versions.\n\nFinally, a defense in depth check is added, such that if the `entry.absolute` is outside of the extraction taret, and we are not in preservePaths:true mode, a warning is raised on that entry, and it is skipped.  Currently, it is believed that this check is redundant, but it did catch some oversights in development.\n\n",
                "markdown": "> ### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\n\nThis logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`.  If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory.\n\nAdditionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path.\n\nThis only affects users of `node-tar` on Windows systems.\n\n### Patches\n\n4.4.18 || 5.0.10 || 6.1.9\n\n### Workarounds\n\nThere is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does.\n\nUsers are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.\n\n### Fix\n\nThe fixed versions strip path roots from all paths prior to being resolved against the extraction target folder, even if such paths are not \"absolute\".\n\nAdditionally, a path starting with a drive letter and then two dots, like `c:../`, would bypass the check for `..` path portions.  This is checked properly in the patched versions.\n\nFinally, a defense in depth check is added, such that if the `entry.absolute` is outside of the extraction taret, and we are not in preservePaths:true mode, a warning is raised on that entry, and it is skipped.  Currently, it is believed that this check is redundant, but it did catch some oversights in development.\n\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/tar@4.4.13                           |\n| Affected range | <4.4.18                                      |\n| Fixed version  | 4.4.18                                       |\n| CVSS Score     |                                          8.2 |\n| CVSS Vector    | CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N |\n"
              },
              "properties": {
                "affected_version": "<4.4.18",
                "cvssV3": 8.2,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N",
                "fixed_version": "4.4.18",
                "purls": [
                  "pkg:npm/tar@4.4.13"
                ],
                "security-severity": "8.2",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2017-1000115",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2017-1000115: Improper Link Resolution Before File Access ('Link Following')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2017-1000115?s=github&n=mercurial&t=pypi&vr=%3C4.3.1",
              "help": {
                "text": "Mercurial prior to version 4.3 is vulnerable to a missing symlink check that can malicious repositories to modify files outside the repository\n",
                "markdown": "> Mercurial prior to version 4.3 is vulnerable to a missing symlink check that can malicious repositories to modify files outside the repository\n\n|                |                                                                 |\n|----------------|-----------------------------------------------------------------|\n| Package        | pkg:pypi/mercurial@4.0                                          |\n| Affected range | <4.3.1                                                          |\n| Fixed version  | 4.3.1                                                           |\n| CVSS Score     |                                                             8.7 |\n| CVSS Vector    | CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:H/VA:N/SC:N/SI:N/SA:N |\n"
              },
              "properties": {
                "affected_version": "<4.3.1",
                "cvssV3": 8.7,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:H/VA:N/SC:N/SI:N/SA:N",
                "fixed_version": "4.3.1",
                "purls": [
                  "pkg:pypi/mercurial@4.0"
                ],
                "security-severity": "8.7",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2017-9462",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2017-9462: Incorrect Permission Assignment for Critical Resource"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2017-9462?s=github&n=mercurial&t=pypi&vr=%3C4.1.3",
              "help": {
                "text": "In Mercurial before 4.1.3, \"hg serve --stdio\" allows remote authenticated users to launch the Python debugger, and consequently execute arbitrary code, by using --debugger as a repository name.\n",
                "markdown": "> In Mercurial before 4.1.3, \"hg serve --stdio\" allows remote authenticated users to launch the Python debugger, and consequently execute arbitrary code, by using --debugger as a repository name.\n\n|                |                                                                 |\n|----------------|-----------------------------------------------------------------|\n| Package        | pkg:pypi/mercurial@4.0                                          |\n| Affected range | <4.1.3                                                          |\n| Fixed version  | 4.1.3                                                           |\n| CVSS Score     |                                                             8.7 |\n| CVSS Vector    | CVSS:4.0/AV:N/AC:L/AT:N/PR:L/UI:N/VC:H/VI:H/VA:H/SC:N/SI:N/SA:N |\n"
              },
              "properties": {
                "affected_version": "<4.1.3",
                "cvssV3": 8.7,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:L/UI:N/VC:H/VI:H/VA:H/SC:N/SI:N/SA:N",
                "fixed_version": "4.1.3",
                "purls": [
                  "pkg:pypi/mercurial@4.0"
                ],
                "security-severity": "8.7",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2018-13346",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2018-13346: Improper Input Validation"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2018-13346?s=github&n=mercurial&t=pypi&vr=%3C4.6.1",
              "help": {
                "text": "The `mpatch_apply` function in `mpatch.c` in Mercurial before 4.6.1 incorrectly proceeds in cases where the fragment start is past the end of the original data, aka OVE-20180430-0004.\n",
                "markdown": "> The `mpatch_apply` function in `mpatch.c` in Mercurial before 4.6.1 incorrectly proceeds in cases where the fragment start is past the end of the original data, aka OVE-20180430-0004.\n\n|                |                                                                 |\n|----------------|-----------------------------------------------------------------|\n| Package        | pkg:pypi/mercurial@4.0                                          |\n| Affected range | <4.6.1                                                          |\n| Fixed version  | 4.6.1                                                           |\n| CVSS Score     |                                                             8.7 |\n| CVSS Vector    | CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:H/VA:N/SC:N/SI:N/SA:N |\n"
              },
              "properties": {
                "affected_version": "<4.6.1",
                "cvssV3": 8.7,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:H/VA:N/SC:N/SI:N/SA:N",
                "fixed_version": "4.6.1",
                "purls": [
                  "pkg:pypi/mercurial@4.0"
                ],
                "security-severity": "8.7",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2018-13348",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2018-13348: Improper Input Validation"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2018-13348?s=github&n=mercurial&t=pypi&vr=%3C4.6.1",
              "help": {
                "text": "The `mpatch_decode` function in `mpatch.c` in Mercurial before 4.6.1 mishandles certain situations where there should be at least 12 bytes remaining after the current position in the patch data, but actually are not, aka OVE-20180430-0001.\n",
                "markdown": "> The `mpatch_decode` function in `mpatch.c` in Mercurial before 4.6.1 mishandles certain situations where there should be at least 12 bytes remaining after the current position in the patch data, but actually are not, aka OVE-20180430-0001.\n\n|                |                                                                 |\n|----------------|-----------------------------------------------------------------|\n| Package        | pkg:pypi/mercurial@4.0                                          |\n| Affected range | <4.6.1                                                          |\n| Fixed version  | 4.6.1                                                           |\n| CVSS Score     |                                                             8.7 |\n| CVSS Vector    | CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:H/VA:N/SC:N/SI:N/SA:N |\n"
              },
              "properties": {
                "affected_version": "<4.6.1",
                "cvssV3": 8.7,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:H/VA:N/SC:N/SI:N/SA:N",
                "fixed_version": "4.6.1",
                "purls": [
                  "pkg:pypi/mercurial@4.0"
                ],
                "security-severity": "8.7",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2018-17983",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2018-17983: Out-of-bounds Read"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2018-17983?s=github&n=mercurial&t=pypi&vr=%3C4.7.2",
              "help": {
                "text": "`cext/manifest.c` in Mercurial before 4.7.2 has an out-of-bounds read during parsing of a malformed manifest entry.\n",
                "markdown": "> `cext/manifest.c` in Mercurial before 4.7.2 has an out-of-bounds read during parsing of a malformed manifest entry.\n\n|                |                                                                 |\n|----------------|-----------------------------------------------------------------|\n| Package        | pkg:pypi/mercurial@4.0                                          |\n| Affected range | <4.7.2                                                          |\n| Fixed version  | 4.7.2                                                           |\n| CVSS Score     |                                                             8.8 |\n| CVSS Vector    | CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:N/VA:H/SC:N/SI:N/SA:N |\n"
              },
              "properties": {
                "affected_version": "<4.7.2",
                "cvssV3": 8.8,
                "cvssV3_severity": "HIGH",
                "cvssV3_vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:N/VA:H/SC:N/SI:N/SA:N",
                "fixed_version": "4.7.2",
                "purls": [
                  "pkg:pypi/mercurial@4.0"
                ],
                "security-severity": "8.8",
                "tags": [
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2017-1000116",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2017-1000116: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2017-1000116?s=github&n=mercurial&t=pypi&vr=%3C4.3",
              "help": {
                "text": "Mercurial prior to 4.3 did not adequately sanitize hostnames passed to ssh, leading to possible shell-injection attacks.\n",
                "markdown": "> Mercurial prior to 4.3 did not adequately sanitize hostnames passed to ssh, leading to possible shell-injection attacks.\n\n|                |                                                                 |\n|----------------|-----------------------------------------------------------------|\n| Package        | pkg:pypi/mercurial@4.0                                          |\n| Affected range | <4.3                                                            |\n| Fixed version  |                                                             4.3 |\n| CVSS Score     |                                                             9.3 |\n| CVSS Vector    | CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:H/SC:N/SI:N/SA:N |\n"
              },
              "properties": {
                "affected_version": "<4.3",
                "cvssV3": 9.3,
                "cvssV3_severity": "CRITICAL",
                "cvssV3_vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:H/SC:N/SI:N/SA:N",
                "fixed_version": "4.3",
                "purls": [
                  "pkg:pypi/mercurial@4.0"
                ],
                "security-severity": "9.3",
                "tags": [
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2017-17458",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2017-17458: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2017-17458?s=github&n=mercurial&t=pypi&vr=%3C4.4.1",
              "help": {
                "text": "In Mercurial before 4.4.1, it is possible that a specially malformed repository can cause Git subrepositories to run arbitrary code in the form of a `.git/hooks/post-update` script checked into the repository. Typical use of Mercurial prevents construction of such repositories, but they can be created programmatically.\n",
                "markdown": "> In Mercurial before 4.4.1, it is possible that a specially malformed repository can cause Git subrepositories to run arbitrary code in the form of a `.git/hooks/post-update` script checked into the repository. Typical use of Mercurial prevents construction of such repositories, but they can be created programmatically.\n\n|                |                                                                 |\n|----------------|-----------------------------------------------------------------|\n| Package        | pkg:pypi/mercurial@4.0                                          |\n| Affected range | <4.4.1                                                          |\n| Fixed version  | 4.4.1                                                           |\n| CVSS Score     |                                                             9.3 |\n| CVSS Vector    | CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:H/SC:N/SI:N/SA:N |\n"
              },
              "properties": {
                "affected_version": "<4.4.1",
                "cvssV3": 9.3,
                "cvssV3_severity": "CRITICAL",
                "cvssV3_vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:H/SC:N/SI:N/SA:N",
                "fixed_version": "4.4.1",
                "purls": [
                  "pkg:pypi/mercurial@4.0"
                ],
                "security-severity": "9.3",
                "tags": [
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2018-1000132",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2018-1000132: Incorrect Permission Assignment for Critical Resource"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2018-1000132?s=github&n=mercurial&t=pypi&vr=%3C4.5.1",
              "help": {
                "text": "Mercurial version 4.5 and earlier contains a Incorrect Access Control (CWE-285) vulnerability in Protocol server that can result in Unauthorized data access. This attack appear to be exploitable via network connectivity. This vulnerability appears to have been fixed in 4.5.1.\n",
                "markdown": "> Mercurial version 4.5 and earlier contains a Incorrect Access Control (CWE-285) vulnerability in Protocol server that can result in Unauthorized data access. This attack appear to be exploitable via network connectivity. This vulnerability appears to have been fixed in 4.5.1.\n\n|                |                                                                 |\n|----------------|-----------------------------------------------------------------|\n| Package        | pkg:pypi/mercurial@4.0                                          |\n| Affected range | <4.5.1                                                          |\n| Fixed version  | 4.5.1                                                           |\n| CVSS Score     |                                                             9.3 |\n| CVSS Vector    | CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N |\n"
              },
              "properties": {
                "affected_version": "<4.5.1",
                "cvssV3": 9.3,
                "cvssV3_severity": "CRITICAL",
                "cvssV3_vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N",
                "fixed_version": "4.5.1",
                "purls": [
                  "pkg:pypi/mercurial@4.0"
                ],
                "security-severity": "9.3",
                "tags": [
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2018-13347",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2018-13347: Integer Overflow or Wraparound"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2018-13347?s=github&n=mercurial&t=pypi&vr=%3C4.6.1",
              "help": {
                "text": "`mpatch.c` in Mercurial before 4.6.1 mishandles integer addition and subtraction, aka OVE-20180430-0002.\n",
                "markdown": "> `mpatch.c` in Mercurial before 4.6.1 mishandles integer addition and subtraction, aka OVE-20180430-0002.\n\n|                |                                                                 |\n|----------------|-----------------------------------------------------------------|\n| Package        | pkg:pypi/mercurial@4.0                                          |\n| Affected range | <4.6.1                                                          |\n| Fixed version  | 4.6.1                                                           |\n| CVSS Score     |                                                             9.3 |\n| CVSS Vector    | CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:H/SC:N/SI:N/SA:N |\n"
              },
              "properties": {
                "affected_version": "<4.6.1",
                "cvssV3": 9.3,
                "cvssV3_severity": "CRITICAL",
                "cvssV3_vector": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:H/SC:N/SI:N/SA:N",
                "fixed_version": "4.6.1",
                "purls": [
                  "pkg:pypi/mercurial@4.0"
                ],
                "security-severity": "9.3",
                "tags": [
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-3918",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-3918: Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2021-3918?s=github&n=json-schema&t=npm&vr=%3C0.4.0",
              "help": {
                "text": "json-schema before version 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution').\n",
                "markdown": "> json-schema before version 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution').\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/json-schema@0.2.3                    |\n| Affected range | <0.4.0                                       |\n| Fixed version  | 0.4.0                                        |\n| CVSS Score     |                                          9.8 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H |\n"
              },
              "properties": {
                "affected_version": "<0.4.0",
                "cvssV3": 9.8,
                "cvssV3_severity": "CRITICAL",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "fixed_version": "0.4.0",
                "purls": [
                  "pkg:npm/json-schema@0.2.3"
                ],
                "security-severity": "9.8",
                "tags": [
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-44906",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "CVE-2021-44906: Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')"
              },
              "helpUri": "https://scout.docker.com/v/CVE-2021-44906?s=github&n=minimist&t=npm&vr=%3E%3D1.0.0%2C%3C1.2.6",
              "help": {
                "text": "Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69-95).\n",
                "markdown": "> Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69-95).\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/minimist@1.2.5                       |\n| Affected range | >=1.0.0,<1.2.6                               |\n| Fixed version  | 1.2.6                                        |\n| CVSS Score     |                                          9.8 |\n| CVSS Vector    | CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H |\n"
              },
              "properties": {
                "affected_version": ">=1.0.0,<1.2.6",
                "cvssV3": 9.8,
                "cvssV3_severity": "CRITICAL",
                "cvssV3_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "fixed_version": "1.2.6",
                "purls": [
                  "pkg:npm/minimist@1.2.5"
                ],
                "security-severity": "9.8",
                "tags": [
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "GMS-2020-2",
              "name": "OsPackageVulnerability",
              "shortDescription": {
                "text": "GMS-2020-2: OWASP Top Ten 2017 Category A9 - Using Components with Known Vulnerabilities"
              },
              "helpUri": "https://scout.docker.com/v/GMS-2020-2?s=gitlab&n=execa&t=npm&vr=%3C2.0.0",
              "help": {
                "text": "Attackers could trick execa into executing arbitrary binaries. This behaviour is caused by the setting `preferLocal=true` which makes execa search for locally installed binaries and executes them. This vulnerability is usually only exploitable when using execa on a client-side LOCAL application.\n",
                "markdown": "> Attackers could trick execa into executing arbitrary binaries. This behaviour is caused by the setting `preferLocal=true` which makes execa search for locally installed binaries and executes them. This vulnerability is usually only exploitable when using execa on a client-side LOCAL application.\n\n|                |                                              |\n|----------------|----------------------------------------------|\n| Package        | pkg:npm/execa@0.7.0                          |\n| Affected range | <2.0.0                                       |\n| Fixed version  | 2.0.0                                        |\n| CVSS Score     |                                          9.8 |\n| CVSS Vector    | CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H |\n"
              },
              "properties": {
                "affected_version": "<2.0.0",
                "cvssV3": 9.8,
                "cvssV3_severity": "CRITICAL",
                "cvssV3_vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                "fixed_version": "2.0.0",
                "purls": [
                  "pkg:npm/execa@0.7.0"
                ],
                "security-severity": "9.8",
                "tags": [
                  "CRITICAL"
                ]
              }
            }
          ],
          "version": "1.16.1"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2021-3807",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2021-3807                                 \n  Severity        : HIGH                                          \n  Package         : pkg:npm/ansi-regex@4.1.0                      \n  Affected range  : >=4.0.0,<4.1.1                                \n  Fixed version   : 4.1.1                                         \n  CVSS Score      : 7.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H  \n  EPSS Score      : 0.002880                                      \n  EPSS Percentile : 0.685150                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/cliui/node_modules/ansi-regex/package.json"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/wrap-ansi/node_modules/ansi-regex/package.json"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/yargs/node_modules/ansi-regex/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3807",
          "ruleIndex": 0,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2021-3807                                 \n  Severity        : HIGH                                          \n  Package         : pkg:npm/ansi-regex@3.0.0                      \n  Affected range  : >=3.0.0,<3.0.1                                \n  Fixed version   : 3.0.1                                         \n  CVSS Score      : 7.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H  \n  EPSS Score      : 0.002880                                      \n  EPSS Percentile : 0.685150                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/string-width/node_modules/ansi-regex/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24999",
          "ruleIndex": 1,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-24999                                \n  Severity        : HIGH                                          \n  Package         : pkg:npm/qs@6.5.2                              \n  Affected range  : >=6.5.0,<6.5.3                                \n  Fixed version   : 6.5.3                                         \n  CVSS Score      : 7.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H  \n  EPSS Score      : 0.013960                                      \n  EPSS Percentile : 0.860930                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/qs/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25881",
          "ruleIndex": 2,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-25881                                \n  Severity        : HIGH                                          \n  Package         : pkg:npm/http-cache-semantics@3.8.1            \n  Affected range  : <4.1.1                                        \n  Fixed version   : 4.1.1                                         \n  CVSS Score      : 7.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H  \n  EPSS Score      : 0.002080                                      \n  EPSS Percentile : 0.585340                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/http-cache-semantics/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883",
          "ruleIndex": 3,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-25883                                \n  Severity        : HIGH                                          \n  Package         : pkg:npm/semver@5.7.1                          \n  Affected range  : <5.7.2                                        \n  Fixed version   : 5.7.2                                         \n  CVSS Score      : 7.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H  \n  EPSS Score      : 0.003480                                      \n  EPSS Percentile : 0.714890                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/semver/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3517",
          "ruleIndex": 4,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-3517                                 \n  Severity        : HIGH                                          \n  Package         : pkg:npm/minimatch@3.0.4                       \n  Affected range  : <3.0.5                                        \n  Fixed version   : 3.0.5                                         \n  CVSS Score      : 7.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H  \n  EPSS Score      : 0.001890                                      \n  EPSS Percentile : 0.564990                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/minimatch/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-38900",
          "ruleIndex": 5,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2022-38900                                \n  Severity        : HIGH                                          \n  Package         : pkg:npm/decode-uri-component@0.2.0            \n  Affected range  : <0.2.1                                        \n  Fixed version   : 0.2.1                                         \n  CVSS Score      : 7.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H  \n  EPSS Score      : 0.004560                                      \n  EPSS Percentile : 0.750010                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/decode-uri-component/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21538",
          "ruleIndex": 6,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2024-21538                                \n  Severity        : HIGH                                          \n  Package         : pkg:npm/cross-spawn@5.1.0                     \n  Affected range  : <6.0.6                                        \n  Fixed version   : 7.0.5                                         \n  CVSS Score      : 7.5                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H  \n  EPSS Score      : 0.000450                                      \n  EPSS Percentile : 0.174100                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/cross-spawn/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-4435",
          "ruleIndex": 7,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2021-4435                                 \n  Severity        : HIGH                                          \n  Package         : pkg:npm/yarn@1.22.5                           \n  Affected range  : <1.22.13                                      \n  Fixed version   : 1.22.13                                       \n  CVSS Score      : 7.7                                           \n  CVSS Vector     : CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H  \n  EPSS Score      : 0.000500                                      \n  EPSS Percentile : 0.218800                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/opt/yarn-v1.22.5/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29415",
          "ruleIndex": 8,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability  : CVE-2024-29415                                \n  Severity       : HIGH                                          \n  Package        : pkg:npm/ip@1.1.5                              \n  Affected range : <=2.0.1                                       \n  Fixed version  : not fixed                                     \n  CVSS Score     : 8.1                                           \n  CVSS Vector    : CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/ip/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32803",
          "ruleIndex": 9,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2021-32803                                \n  Severity        : HIGH                                          \n  Package         : pkg:npm/tar@4.4.13                            \n  Affected range  : >=4.0.0,<4.4.15                               \n  Fixed version   : 4.4.15                                        \n  CVSS Score      : 8.2                                           \n  CVSS Vector     : CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N  \n  EPSS Score      : 0.006890                                      \n  EPSS Percentile : 0.799620                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/tar/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32804",
          "ruleIndex": 10,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2021-32804                                \n  Severity        : HIGH                                          \n  Package         : pkg:npm/tar@4.4.13                            \n  Affected range  : >=4.0.0,<4.4.14                               \n  Fixed version   : 4.4.14                                        \n  CVSS Score      : 8.2                                           \n  CVSS Vector     : CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N  \n  EPSS Score      : 0.006890                                      \n  EPSS Percentile : 0.799620                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/tar/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37701",
          "ruleIndex": 11,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2021-37701                                \n  Severity        : HIGH                                          \n  Package         : pkg:npm/tar@4.4.13                            \n  Affected range  : >=3.0.0,<4.4.16                               \n  Fixed version   : 4.4.16                                        \n  CVSS Score      : 8.2                                           \n  CVSS Vector     : CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N  \n  EPSS Score      : 0.001570                                      \n  EPSS Percentile : 0.526060                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/tar/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37712",
          "ruleIndex": 12,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2021-37712                                \n  Severity        : HIGH                                          \n  Package         : pkg:npm/tar@4.4.13                            \n  Affected range  : >=3.0.0,<4.4.18                               \n  Fixed version   : 4.4.18                                        \n  CVSS Score      : 8.2                                           \n  CVSS Vector     : CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N  \n  EPSS Score      : 0.001560                                      \n  EPSS Percentile : 0.524220                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/tar/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37713",
          "ruleIndex": 13,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2021-37713                                \n  Severity        : HIGH                                          \n  Package         : pkg:npm/tar@4.4.13                            \n  Affected range  : <4.4.18                                       \n  Fixed version   : 4.4.18                                        \n  CVSS Score      : 8.2                                           \n  CVSS Vector     : CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N  \n  EPSS Score      : 0.000620                                      \n  EPSS Percentile : 0.284920                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/tar/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000115",
          "ruleIndex": 14,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2017-1000115                                                 \n  Severity        : HIGH                                                             \n  Package         : pkg:pypi/mercurial@4.0                                           \n  Affected range  : <4.3.1                                                           \n  Fixed version   : 4.3.1                                                            \n  CVSS Score      : 8.7                                                              \n  CVSS Vector     : CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:H/VA:N/SC:N/SI:N/SA:N  \n  EPSS Score      : 0.008310                                                         \n  EPSS Percentile : 0.817890                                                         \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib/python2.7/dist-packages/mercurial-4.0.egg-info"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-9462",
          "ruleIndex": 15,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2017-9462                                                    \n  Severity        : HIGH                                                             \n  Package         : pkg:pypi/mercurial@4.0                                           \n  Affected range  : <4.1.3                                                           \n  Fixed version   : 4.1.3                                                            \n  CVSS Score      : 8.7                                                              \n  CVSS Vector     : CVSS:4.0/AV:N/AC:L/AT:N/PR:L/UI:N/VC:H/VI:H/VA:H/SC:N/SI:N/SA:N  \n  EPSS Score      : 0.009920                                                         \n  EPSS Percentile : 0.833860                                                         \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib/python2.7/dist-packages/mercurial-4.0.egg-info"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-13346",
          "ruleIndex": 16,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2018-13346                                                   \n  Severity        : HIGH                                                             \n  Package         : pkg:pypi/mercurial@4.0                                           \n  Affected range  : <4.6.1                                                           \n  Fixed version   : 4.6.1                                                            \n  CVSS Score      : 8.7                                                              \n  CVSS Vector     : CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:H/VA:N/SC:N/SI:N/SA:N  \n  EPSS Score      : 0.001740                                                         \n  EPSS Percentile : 0.548050                                                         \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib/python2.7/dist-packages/mercurial-4.0.egg-info"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-13348",
          "ruleIndex": 17,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2018-13348                                                   \n  Severity        : HIGH                                                             \n  Package         : pkg:pypi/mercurial@4.0                                           \n  Affected range  : <4.6.1                                                           \n  Fixed version   : 4.6.1                                                            \n  CVSS Score      : 8.7                                                              \n  CVSS Vector     : CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:H/VA:N/SC:N/SI:N/SA:N  \n  EPSS Score      : 0.001470                                                         \n  EPSS Percentile : 0.511710                                                         \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib/python2.7/dist-packages/mercurial-4.0.egg-info"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-17983",
          "ruleIndex": 18,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2018-17983                                                   \n  Severity        : HIGH                                                             \n  Package         : pkg:pypi/mercurial@4.0                                           \n  Affected range  : <4.7.2                                                           \n  Fixed version   : 4.7.2                                                            \n  CVSS Score      : 8.8                                                              \n  CVSS Vector     : CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:N/VA:H/SC:N/SI:N/SA:N  \n  EPSS Score      : 0.002250                                                         \n  EPSS Percentile : 0.603460                                                         \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib/python2.7/dist-packages/mercurial-4.0.egg-info"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000116",
          "ruleIndex": 19,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2017-1000116                                                 \n  Severity        : CRITICAL                                                         \n  Package         : pkg:pypi/mercurial@4.0                                           \n  Affected range  : <4.3                                                             \n  Fixed version   : 4.3                                                              \n  CVSS Score      : 9.3                                                              \n  CVSS Vector     : CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:H/SC:N/SI:N/SA:N  \n  EPSS Score      : 0.022780                                                         \n  EPSS Percentile : 0.892970                                                         \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib/python2.7/dist-packages/mercurial-4.0.egg-info"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-17458",
          "ruleIndex": 20,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2017-17458                                                   \n  Severity        : CRITICAL                                                         \n  Package         : pkg:pypi/mercurial@4.0                                           \n  Affected range  : <4.4.1                                                           \n  Fixed version   : 4.4.1                                                            \n  CVSS Score      : 9.3                                                              \n  CVSS Vector     : CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:H/SC:N/SI:N/SA:N  \n  EPSS Score      : 0.009300                                                         \n  EPSS Percentile : 0.827890                                                         \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib/python2.7/dist-packages/mercurial-4.0.egg-info"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1000132",
          "ruleIndex": 21,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2018-1000132                                                 \n  Severity        : CRITICAL                                                         \n  Package         : pkg:pypi/mercurial@4.0                                           \n  Affected range  : <4.5.1                                                           \n  Fixed version   : 4.5.1                                                            \n  CVSS Score      : 9.3                                                              \n  CVSS Vector     : CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:N/SC:N/SI:N/SA:N  \n  EPSS Score      : 0.002070                                                         \n  EPSS Percentile : 0.583630                                                         \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib/python2.7/dist-packages/mercurial-4.0.egg-info"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-13347",
          "ruleIndex": 22,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2018-13347                                                   \n  Severity        : CRITICAL                                                         \n  Package         : pkg:pypi/mercurial@4.0                                           \n  Affected range  : <4.6.1                                                           \n  Fixed version   : 4.6.1                                                            \n  CVSS Score      : 9.3                                                              \n  CVSS Vector     : CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:H/SC:N/SI:N/SA:N  \n  EPSS Score      : 0.005610                                                         \n  EPSS Percentile : 0.775720                                                         \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/lib/python2.7/dist-packages/mercurial-4.0.egg-info"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3918",
          "ruleIndex": 23,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2021-3918                                 \n  Severity        : CRITICAL                                      \n  Package         : pkg:npm/json-schema@0.2.3                     \n  Affected range  : <0.4.0                                        \n  Fixed version   : 0.4.0                                         \n  CVSS Score      : 9.8                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H  \n  EPSS Score      : 0.002150                                      \n  EPSS Percentile : 0.591150                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/json-schema/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906",
          "ruleIndex": 24,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability   : CVE-2021-44906                                \n  Severity        : CRITICAL                                      \n  Package         : pkg:npm/minimist@1.2.5                        \n  Affected range  : >=1.0.0,<1.2.6                                \n  Fixed version   : 1.2.6                                         \n  CVSS Score      : 9.8                                           \n  CVSS Vector     : CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H  \n  EPSS Score      : 0.022550                                      \n  EPSS Percentile : 0.892430                                      \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/minimist/package.json"
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/mkdirp/node_modules/minimist/package.json"
                }
              }
            }
          ]
        },
        {
          "ruleId": "GMS-2020-2",
          "ruleIndex": 25,
          "kind": "fail",
          "level": "error",
          "message": {
            "text": "  Vulnerability  : GMS-2020-2                                    \n  Severity       : CRITICAL                                      \n  Package        : pkg:npm/execa@0.7.0                           \n  Affected range : <2.0.0                                        \n  Fixed version  : 2.0.0                                         \n  CVSS Score     : 9.8                                           \n  CVSS Vector    : CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H  \n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/usr/local/lib/node_modules/npm/node_modules/execa/package.json"
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
